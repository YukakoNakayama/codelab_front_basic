・JSの役割
　webサイトに動きを付加したり、サーバーからデータを取得してリアルタイムに情報を処理するなどのイベント処理を実行できる。

・JSを外部ファイルで読み込む場合、scriptタグの何という属性ファイルパスを記載するか
　src

・JSはbody終了タグの直前で読み込むことが多い理由
　script要素に読み込むと、そのJSを読み終わるまで表示が止まってしまい、ページの表示に時間がかかるため。

・オブジェクト
　関連のあるデータと機能の集まり。変数宣言と初期化でオブジェクト生成ができる。

・メソッド
　オブジェクトの中で定義されるもの。

・プロパティ
　オブジェクトが持つ情報のこと。

・Elementオブジェクト
　HTMLドキュメント中にあるform要素内で配置される要素(エレメント)を集めたオブジェクトのこと。(button、checkboxなど)

・クッキー
　webサイトに訪問してきたユーザーの情報を保持するために使用される機能。

・カスタム属性
　html要素に対して設定できる独自の属性のこと。

・JSON
　JavaScript Object Notationの略。テキストベースのデータフォーマットで、親和性の高さからAjaxでのデータ交換フォーマットとして利用されることも多い。

・WebAPI
　HTTPプロトコルを用いてネットワーク越しに呼び出すアプリケーション間、システム間のインターフェースのこと。

・Ajax
　「Asynchronous JavaScript + XML」の略。JavascriptとXMLを使って非同期にサーバとの間の通信を行うこと。一部の情報をサーバに送信して、それを受け取り反映させる仕組み。

・SPA(SinglePageApplication)
　単一のWEBページでアプリケーションを構成する設計構造の名称。ページ遷移の必要がなく、動作の向上が期待できる。

・スクリプト言語
　コンピュータの仕組みなどを意識しなくても習得を簡単にするために工夫されたプログラミング言語の総称。(例：javascriptなど)

・オブジェクト指向
　プログラミングを手順ではなく、「モノ」の生成と操作としてみる考え方。

・コンバイラ言語
　人が書いたソースコードをコンピュータが理解できる機械語に翻訳してから実行するプログラミング言語の総称。(例：Java、C言語など)

・JavaとJSの違い
　Javaは応用力のある言語で、大企業での大規模システム開発やAndroidアプリの開発を得意とする。JSとは語呂が似ているが全く別物である。また、Javaはコンバイラ言語で、JSはスクリプト言語である。

・DOM
　端的に言うとHTML要素のこと。JSではこれを取得してサイトに動きを付加する。

・Node.js
　サーバサイドで動くJavaScriptのこと。サーバサイドのプログラムもJSで書けるということ。

・JSのバージョンの違い　ES5/ES6
　ES6では変数宣言の時にvarに加えてlet、constが使えるようになった。また、アロー関数が利用できるようになった。

・GoogleChromeのデベロッパーツールでJSをデバッグは、何のタブで行うか？
　sourcesタブで対象のJSを選択する。

・GoogleChromeのデベロッパーツールでJSのログの確認は、何のタブで行うか？
　コンソールタブ